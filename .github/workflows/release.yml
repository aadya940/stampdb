name: Build and Publish
on:
  release:
    types: [created]
    
jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # macos-13 is an intel runner, macos-14 is apple silicon
        os: [windows-latest, ubuntu-latest, macos-13, macos-14]
        python-version: [3.7, 3.8, 3.9, 3.10, 3.11, 3.12, 3.13]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          
      # Set up QEMU for cross-platform builds (Linux only)
      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all
          
      - name: Clear pip cache
        run: pip cache purge
        
      - name: Clean dist and cibuildwheel temp dirs
        shell: python
        run: |
          import shutil
          import os
          import glob
      
          # Remove dist folder
          if os.path.exists("dist"):
              shutil.rmtree("dist")
              print("Removed dist/")
      
          # Remove cibuildwheel temp dirs
          # On macOS cibuildwheel uses /private/var/folders/.../cibw-run-*
          for path in glob.glob("/private/var/folders/vk/*/cibw-run-*"):
              try:
                  shutil.rmtree(path)
                  print(f"Removed {path}")
              except Exception as e:
                  print(f"Failed to remove {path}: {e}")
                  
      - name: Clean build artifacts 
        shell: python
        run: |
          import shutil
          import os
          import glob
      
          paths_to_remove = ["dist", "build"] + glob.glob("*.egg-info")
      
          for path in paths_to_remove:
              if os.path.exists(path):
                  try:
                      shutil.rmtree(path)
                      print(f"Removed {path}")
                  except Exception as e:
                      print(f"Failed to remove {path}: {e}")
                      
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.19.2
        env:
          MACOSX_DEPLOYMENT_TARGET: "10.15"
          CIBW_ARCHS_LINUX: auto aarch64
          CIBW_SKIP: "cp36-* pp* *-manylinux_i686 *-musllinux_i686 "
          PIP_NO_CACHE_DIR: "1"
          CIBW_TEST_COMMAND: "python -c \"import stampdb; print('Import successful')\""
        with:
          package-dir: .
          output-dir: dist
          config-file: "./pyproject.toml"
          
      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./dist/*.whl
          retention-days: 5
          
  publish:
    needs: build_wheels
    runs-on: ubuntu-latest
    environment: release
    permissions:
      id-token: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: cibw-wheels-*
          path: artifacts
          merge-multiple: true
      
      - name: List downloaded artifacts
        run: |
          echo "Contents of artifacts directory:"
          find artifacts -type f -name "*.whl" | head -10
          echo "Total wheel files: $(find artifacts -name "*.whl" | wc -l)"
      
      - name: Prepare distribution directory
        run: |
          mkdir -p dist
          find artifacts -name "*.whl" -exec cp {} dist/ \;
      
      - name: List wheels
        run: ls -lh dist/
      
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true
